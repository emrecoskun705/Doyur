//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Doyur.db
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class doyurEntities : DbContext
    {
        public doyurEntities()
            : base("name=doyurEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Address { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<Restaurant> Restaurant { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<OrderProductList> OrderProductList { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_AddProductToOrder(Nullable<int> productId, Nullable<int> orderId, Nullable<int> quantity)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AddProductToOrder", productIdParameter, orderIdParameter, quantityParameter);
        }
    
        public virtual ObjectResult<sp_CreateOrder_Result> sp_CreateOrder(Nullable<int> userId, Nullable<int> restaurantId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var restaurantIdParameter = restaurantId.HasValue ?
                new ObjectParameter("RestaurantId", restaurantId) :
                new ObjectParameter("RestaurantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CreateOrder_Result>("sp_CreateOrder", userIdParameter, restaurantIdParameter);
        }
    
        public virtual ObjectResult<sp_GetActiveOrder_Result> sp_GetActiveOrder(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetActiveOrder_Result>("sp_GetActiveOrder", userIdParameter);
        }
    
        public virtual ObjectResult<sp_GetOrderProducts_Result> sp_GetOrderProducts(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrderProducts_Result>("sp_GetOrderProducts", userIdParameter);
        }
    
        public virtual ObjectResult<sp_GetProducts_Result> sp_GetProducts(Nullable<byte> tOPID, Nullable<int> restaurantId)
        {
            var tOPIDParameter = tOPID.HasValue ?
                new ObjectParameter("TOPID", tOPID) :
                new ObjectParameter("TOPID", typeof(byte));
    
            var restaurantIdParameter = restaurantId.HasValue ?
                new ObjectParameter("RestaurantId", restaurantId) :
                new ObjectParameter("RestaurantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProducts_Result>("sp_GetProducts", tOPIDParameter, restaurantIdParameter);
        }
    
        public virtual ObjectResult<sp_GetRestaurant_Result> sp_GetRestaurant(Nullable<byte> funcId, Nullable<int> restaurantId)
        {
            var funcIdParameter = funcId.HasValue ?
                new ObjectParameter("FuncId", funcId) :
                new ObjectParameter("FuncId", typeof(byte));
    
            var restaurantIdParameter = restaurantId.HasValue ?
                new ObjectParameter("RestaurantId", restaurantId) :
                new ObjectParameter("RestaurantId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRestaurant_Result>("sp_GetRestaurant", funcIdParameter, restaurantIdParameter);
        }
    
        public virtual ObjectResult<sp_GetRestaurants_Result> sp_GetRestaurants(Nullable<byte> tOPID)
        {
            var tOPIDParameter = tOPID.HasValue ?
                new ObjectParameter("TOPID", tOPID) :
                new ObjectParameter("TOPID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRestaurants_Result>("sp_GetRestaurants", tOPIDParameter);
        }
    
        public virtual ObjectResult<sp_GetActiveOrderProductList_Result> sp_GetActiveOrderProductList(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetActiveOrderProductList_Result>("sp_GetActiveOrderProductList", orderIdParameter);
        }
    }
}
